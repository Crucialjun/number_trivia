// Mocks generated by Mockito 5.4.4 from annotations
// in number_trivia/test/features/number_trivia/data/datasources/remote/number_trivia_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i7;

import 'package:dio/dio.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:number_trivia/core/api_response.dart' as _i2;
import 'package:number_trivia/core/error/failures.dart' as _i3;
import 'package:number_trivia/features/number_trivia/data/datasources/remote/number_trivia_remote_data_source.dart'
    as _i9;
import 'package:number_trivia/features/number_trivia/domain/entities/number_trivia.dart'
    as _i4;
import 'package:number_trivia/services/network_service/network_service.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFailure_1 extends _i1.SmartFake implements _i3.Failure {
  _FakeFailure_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNumberTrivia_2 extends _i1.SmartFake implements _i4.NumberTrivia {
  _FakeNumberTrivia_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i5.NetworkService {
  @override
  _i6.Future<_i2.ApiResponse<Map<String, dynamic>>> delete(
    String? url, {
    dynamic body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
            _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
                _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ApiResponse<Map<String, dynamic>>> get(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
            _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
                _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ApiResponse<Map<String, dynamic>>> put(
    String? url, {
    dynamic body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
            _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
                _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ApiResponse<Map<String, dynamic>>> post(
    String? url, {
    dynamic body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
            _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
                _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ApiResponse<Map<String, dynamic>>> postFile({
    required String? url,
    required String? key,
    required _i7.File? file,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postFile,
          [],
          {
            #url: url,
            #key: key,
            #file: file,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
            _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #postFile,
            [],
            {
              #url: url,
              #key: key,
              #file: file,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>.value(
                _FakeApiResponse_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #postFile,
            [],
            {
              #url: url,
              #key: key,
              #file: file,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i2.ApiResponse<Map<String, dynamic>>>);

  @override
  _i3.Failure convertException(_i8.DioException? e) => (super.noSuchMethod(
        Invocation.method(
          #convertException,
          [e],
        ),
        returnValue: _FakeFailure_1(
          this,
          Invocation.method(
            #convertException,
            [e],
          ),
        ),
        returnValueForMissingStub: _FakeFailure_1(
          this,
          Invocation.method(
            #convertException,
            [e],
          ),
        ),
      ) as _i3.Failure);
}

/// A class which mocks [NumberTriviaRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaRemoteDatasource extends _i1.Mock
    implements _i9.NumberTriviaRemoteDatasource {
  @override
  _i6.Future<_i4.NumberTrivia> getConcreteNumberTrivia(int? number) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConcreteNumberTrivia,
          [number],
        ),
        returnValue: _i6.Future<_i4.NumberTrivia>.value(_FakeNumberTrivia_2(
          this,
          Invocation.method(
            #getConcreteNumberTrivia,
            [number],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.NumberTrivia>.value(_FakeNumberTrivia_2(
          this,
          Invocation.method(
            #getConcreteNumberTrivia,
            [number],
          ),
        )),
      ) as _i6.Future<_i4.NumberTrivia>);

  @override
  _i6.Future<_i4.NumberTrivia> getRandomNumberTrivia() => (super.noSuchMethod(
        Invocation.method(
          #getRandomNumberTrivia,
          [],
        ),
        returnValue: _i6.Future<_i4.NumberTrivia>.value(_FakeNumberTrivia_2(
          this,
          Invocation.method(
            #getRandomNumberTrivia,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.NumberTrivia>.value(_FakeNumberTrivia_2(
          this,
          Invocation.method(
            #getRandomNumberTrivia,
            [],
          ),
        )),
      ) as _i6.Future<_i4.NumberTrivia>);
}
